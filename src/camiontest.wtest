/*
 * camionTest: Bien. Conviene separar los test, por los objetos que se están verificando y 
 * por cada assert, ya que en otro caso es más dificil detectar errores. Se pueden agrupar
 * en describe y dentro de los mismos usar variables y el método initialize() para definir
 * el escenario de prueba, y luego de eso armar los test.
 * Otra cosa es que no se debe enregar "código muerto" o líneas de código comentado, como 
 * aparece en los 2 assert comentados.
 */
import camion.*
import cosas.*

/*
  	Por otro lado, armar un test del camión, cargado con lo siguiente: bumblebee como robot, 
 	la arena a granel con 150 kilos, la batería antiaérea con los misiles puestos, y el 
 	embalaje de seguridad poniéndole como contenido el paquete de ladrillos con 80 ladrillos.
	Para cada método, calcular qué resultado tiene que dar, y hacer el test correspondiente.
	Esto va en camionTest.wtest.
 
 */
 
 
 test "camion"{
 	bumblebee.esAuto(false)
 	arena.peso(150)
 	bateriaAntiarea.hayMisiles(true)
 	paqueteLadrillos.cantLadrillos(80)
 	embalajeSeguridad.cosaEnvuelta(paqueteLadrillos)
 	
 	camion.cargar(bumblebee)
 	camion.cargar(arena)
 	camion.cargar(bateriaAntiarea)
 	camion.cargar(embalajeSeguridad)
 	//assert.equals(300, camion.hayAlgunoQuePesa(300)) /* Esto hay que borrarlo */
 	//assert.equals(100, camion.elDeNivel(100))  /* Esto hay que borrarlo */
 	assert.equals(2410, camion.pesoTotal())
 	assert.that(not(camion.excedidoDePeso()))
 	assert.that(not(camion.tieneAlgoQuePesaEntre(10, 5000)))
 	
 }